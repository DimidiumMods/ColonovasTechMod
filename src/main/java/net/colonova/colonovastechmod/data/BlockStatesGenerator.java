package net.colonova.colonovastechmod.data;

import net.colonova.colonovastechmod.handler.registry.BlockRegistry;
import net.colonova.colonovastechmod.item.block.BlockItemTank;
import net.colonova.colonovastechmod.util.Reference;

import net.minecraft.data.DataGenerator;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Blocks;
import net.minecraftforge.client.model.generators.BlockStateProvider;
import net.minecraftforge.common.data.ExistingFileHelper;
import net.minecraftforge.registries.RegistryObject;

public class BlockStatesGenerator extends BlockStateProvider
{
    public BlockStatesGenerator(DataGenerator gen, ExistingFileHelper helper)
    {
        super(gen, Reference.MOD_ID, helper);
    }

    @Override
    protected void registerStatesAndModels()
    {
        simpleBlock(BlockRegistry.ALUMINIUM_BLOCK.get());
        simpleBlock(BlockRegistry.COPPER_BLOCK.get());
        simpleBlock(BlockRegistry.IRIDIUM_BLOCK.get());
        simpleBlock(BlockRegistry.LEAD_BLOCK.get());
        simpleBlock(BlockRegistry.NICKEL_BLOCK.get());
        simpleBlock(BlockRegistry.PLATINUM_BLOCK.get());
        simpleBlock(BlockRegistry.SILVER_BLOCK.get());
        simpleBlock(BlockRegistry.TIN_BLOCK.get());
        simpleBlock(BlockRegistry.URANIUM_BLOCK.get());
        simpleBlock(BlockRegistry.ALUMINIUM_ORE.get());
        simpleBlock(BlockRegistry.COPPER_ORE.get());
        simpleBlock(BlockRegistry.IRIDIUM_ORE.get());
        simpleBlock(BlockRegistry.LEAD_ORE.get());
        simpleBlock(BlockRegistry.NICKEL_ORE.get());
        simpleBlock(BlockRegistry.PLATINUM_ORE.get());
        simpleBlock(BlockRegistry.SILVER_ORE.get());
        simpleBlock(BlockRegistry.TIN_ORE.get());
        simpleBlock(BlockRegistry.URANIUM_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_ALUMINIUM_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_COPPER_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_IRIDIUM_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_LEAD_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_NICKEL_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_PLATINUM_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_SILVER_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_TIN_ORE.get());
        simpleBlock(BlockRegistry.DEEP_SLATE_URANIUM_ORE.get());

        /* Machines */

        simpleBlock(BlockRegistry.BASIC_MACHINE_FRAME.get());
        simpleBlock(BlockRegistry.INTERMEDIATE_MACHINE_FRAME.get());
        simpleBlock(BlockRegistry.ADVANCED_MACHINE_FRAME.get());
        simpleBlock(BlockRegistry.ULTIMATE_MACHINE_FRAME.get());

        simpleBlock(BlockRegistry.HEALER.get());

        ResourceLocation side = mcLoc("block/iron_block");
        ResourceLocation top = mcLoc("block/iron_block");
        simpleBlock(BlockRegistry.BASIC_ENERGY_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_ENERGY_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_ENERGY_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_ENERGY_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_FILTER_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_FILTER_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_FILTER_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_FILTER_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_FLUID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_FLUID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_FLUID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_FLUID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_GAS_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_GAS_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_GAS_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_GAS_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_ITEM_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_ITEM_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_ITEM_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_ITEM_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_VOID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_VOID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_VOID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_VOID_CABLE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PORTAL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PORTAL_CONTROLLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PORTAL_FRAME.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PORTAL_INTERFACE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PORTAL_STABILIZER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PORTAL_PROGRAMMER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ANGEL_BLOCK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.AUTOMATIC_ANVIL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_BOTTLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_BOTTLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_BOTTLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_BOTTLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BREAKER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_ENERGY_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_ENERGY_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_ENERGY_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_ENERGY_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_FLUID_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_FLUID_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_FLUID_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_FLUID_BUFFER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_BUILDER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_BUILDER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_BUILDER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_BUILDER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ITEM_CANNON.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_CHARGER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_CHARGER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_CHARGER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_CHARGER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.CLOCK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_CRAFTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_CRAFTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_CRAFTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_CRAFTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_CRATE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_CRATE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_CRATE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_CRATE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.DRAIN.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.DROPPER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_DRUM.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_DRUM.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_DRUM.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_DRUM.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.MAGIC_EGG.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ELEVATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ENCHANTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_ENDER_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_ENDER_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_ENDER_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_ENDER_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.FLAG.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_ENERGY_STORAGE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_ENERGY_STORAGE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_ENERGY_STORAGE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_ENERGY_STORAGE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_FURNACE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_FURNACE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_FURNACE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_FURNACE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.MOB_GLASS.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.GRINDER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_INFUSER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_INFUSER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_INFUSER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_INFUSER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_LAVA_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_LAVA_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_LAVA_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_LAVA_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.MELTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_NETHER_STAR_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_NETHER_STAR_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_NETHER_STAR_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_NETHER_STAR_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PAINT_CAN.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PAINTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PLACER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.POWER_MONITOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_PROJECTOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_PROJECTOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_PROJECTOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_PROJECTOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.QUARRY.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.QUARRY_SPEED_UPGRADE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.QUARRY_SILK_UPGRADE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.QUARRY_FORTUNE_UPGRADE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.QUARRY_VOID_UPGRADE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.SHOWER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_SOLAR_PANEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_SOLAR_PANEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_SOLAR_PANEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_SOLAR_PANEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.SOUND_MUFFLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.SPAWNER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_SPIKES.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_SPIKES.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_SPIKES.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_SPIKES.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_STEAM_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_STEAM_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_STEAM_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_STEAM_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_STIRLING_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_STIRLING_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_STIRLING_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_STIRLING_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.TIME_CONTROLLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.WEATHER_CONTROLLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.TRANSCEIVER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.UNCRAFTER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.VACUUM_HOPPER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.VILLAGE_LOCATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.VOID_PORTAL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_WATER_WHEEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_WATER_WHEEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_WATER_WHEEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_WATER_WHEEL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.WEATHER_MUFFLER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_WINDMILL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_WINDMILL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_WINDMILL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_WINDMILL.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.WIRELESS_CHARGER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.WITHER_BUILDER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.WITHER_GLASS.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.WITHER_STONE.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_FLUID_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_FLUID_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_FLUID_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_FLUID_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_GAS_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_GAS_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_GAS_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_GAS_TANK.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.PUMP.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.REPAIRER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.BASIC_TNT_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.INTERMEDIATE_TNT_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ADVANCED_TNT_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.ULTIMATE_TNT_GENERATOR.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));
        simpleBlock(BlockRegistry.TRADER.get(), models().cube(Blocks.IRON_BLOCK.getDescriptionId(), side, top, side, side, side, side));

    }
}
